networks:
  swarm-network:
    external: true

services:
  traefik:
    image: "traefik:v3.2.3"
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
    ports:
      - "80:80"     # Web
      - "443:443"   # HTTPS
      - "8080:8080" # Dashboard
    command:
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.swarmMode=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_data:/letsencrypt
    networks:
      - swarm-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"

  provisioning-api:
    image: 5quidw4rd/provision-script-prod:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - swarm-network
    deploy:
      restart_policy:
        condition: any
    labels:
      - traefik.enable=true
      - traefik.http.routers.provision.rule=Host(`provision.${DOMAIN_NAME}`)
      - traefik.http.services.provision.loadbalancer.server.port=9000
      - traefik.http.routers.provision.tls=true
      - traefik.http.routers.provision.entrypoints=websecure
      - traefik.http.routers.provision.tls.certresolver=mytlschallenge

volumes:
  traefik_data:
    name: traefik_data